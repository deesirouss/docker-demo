services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo_app
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network

  backend:
    build:
      context: ./backend
    container_name: backend
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app/
          ignore:
            - node_modules/
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=todo_app
    networks:
      - backend-network
      - frontend-network

  frontend:
    build:
      context: ./frontend
    develop:
      watch:
        - path: ./frontend/src
          action: rebuild
          ignore:
            - node_modules/
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - frontend-network

networks:
  backend-network:
    internal: true
  frontend-network:

volumes:
  postgres-data:
